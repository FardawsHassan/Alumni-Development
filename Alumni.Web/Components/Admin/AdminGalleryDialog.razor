@inject ISnackbar _snackBar
<MudDialog>
    <DialogContent>
        <EditForm Model="@Photo" OnValidSubmit="ValidSumbit">
            <MudTextField @bind-Value="Photo.Caption" Label="Caption" Margin="Margin.Dense" Variant="Variant.Outlined" Class="mb-3"/>
            <MudFileUpload Accept=".jpg, .jpeg, .png" T="IBrowserFile" Hidden="false" FilesChanged="OnInputFileChanged" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0">
                <ButtonTemplate Context="ImageUpload">
                    <MudPaper Height="150px" Width="200px" Outlined="true" Class="relative rounded-lg border-2 border-dashed pa-2 mud-width-full mud-height-full z-10">
                        @if (string.IsNullOrEmpty(Photo.PhotoPath))
                        {
                            <MudText Typo="Typo.h6">Drag and drop photos here or click</MudText>
                        }
                        else
                        {
                            <MudImage Src="@($"images/admin/{Photo.PhotoPath}")" Width="150" Height="120" ObjectFit="ObjectFit.Contain" />
                        }
                    </MudPaper>
                </ButtonTemplate>
           </MudFileUpload>
            <MudItem Class="mt-6 pb-4 d-flex justify-end gap-4">
                <MudButton Variant="Variant.Filled" OnClick="Cancel">Cancel</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Save</MudButton>
            </MudItem>
       </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public Photo Photo { get; set; } = new();
    [Parameter]
    public string rootFolder { get; set; } = string.Empty;
    [Parameter]
    public bool isEdit { get; set; } = false;
    private const long MAX_FILE_SIZE = 5 * 1024 * 1024;
    private string oldPhotoPath = "";

    protected async override Task OnInitializedAsync()
    {
        oldPhotoPath = Photo.PhotoPath;
    }

    private async Task OnInputFileChanged(IBrowserFile file)
    {
        try
        {
            if (file.Size < MAX_FILE_SIZE)
            {
                if (!string.IsNullOrEmpty(Photo.PhotoPath) && File.Exists(Path.Combine(rootFolder, Photo.PhotoPath)) && oldPhotoPath!=Photo.PhotoPath)
                {
                    File.Delete(Path.Combine(rootFolder, Photo.PhotoPath));
                }
                string extension = Path.GetExtension(file.Name);
                string imageName = $"gallery{DateTime.Now.ToString("yyyyMMddHHmmss")}.{extension}";
                var path = Path.Combine(_webHostEnvironment.ContentRootPath, "wwwroot\\images\\admin", imageName);
                var stream = file.OpenReadStream();
                var memoryStream = new MemoryStream();
                await stream.CopyToAsync(memoryStream);
                using var fileStream = new FileStream(path, FileMode.Create, FileAccess.Write);
                memoryStream.WriteTo(fileStream);
                Photo.PhotoPath = imageName;
            }
            else
            {
                _snackBar.Add("Picture size must be less than 5MB", Severity.Error);
            }
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private void Cancel()
    {
        if (isEdit)
        {

            if(oldPhotoPath != Photo.PhotoPath)
            {
                if (File.Exists(Path.Combine(rootFolder, Photo.PhotoPath)))
                {
                    File.Delete(Path.Combine(rootFolder, Photo.PhotoPath));
                }                    
            }
            Photo.PhotoPath = oldPhotoPath;
            MudDialog.Cancel();

        }
        else
        {
            if (!string.IsNullOrEmpty(Photo.PhotoPath) && File.Exists(Path.Combine(rootFolder, Photo.PhotoPath)))
            {
                File.Delete(Path.Combine(rootFolder, Photo.PhotoPath));
            }
            MudDialog.Cancel();
        }
    }  

    private async Task ValidSumbit()
    {
        if (!string.IsNullOrEmpty(Photo.PhotoPath))
        {
            if (isEdit)
            {
                if (oldPhotoPath != Photo.PhotoPath)
                {
                    if (File.Exists(Path.Combine(rootFolder, oldPhotoPath)))
                    {
                        File.Delete(Path.Combine(rootFolder, oldPhotoPath));
                    }
                }
            }
            MudDialog.Close(Photo);
        }
    }
}
